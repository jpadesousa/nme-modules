#/bin/bash

export CONFIG_SCRIPT=$HOME/.config_r_studio
export PROXY_PORT=$(python -c 'import socket; s=socket.socket(); s.bind(("",0)); print(s.getsockname()[1]); s.close()')
export SERVICE_PORT=$(python -c 'import socket; s=socket.socket(); s.bind(("",0)); print(s.getsockname()[1]); s.close()')

# Write the certificates
echo "$keyfile" > .jupyter.key
echo "$certfile" > .jupyter.crt
echo "$cafile" > .jupyter.ca

WARN_JUPYTERHUB="python3 /cluster/apps/nss/jupyterhub/warn_hub.py"

# Get the proxy function
. /cluster/apps/nss/jupyterhub/start-proxy

if [ -f $CONFIG_SCRIPT ];
then
    . $CONFIG_SCRIPT
fi

# Setup the default variables
export RSTUDIO_MODULE_VERSION=${RSTUDIO_MODULE_VERSION:-4.3.1}
export RSTUDIO_TAG=${RSTUDIO_TAG:-4.3.1}
export RSTUDIO_IMAGE=${RSTUDIO_IMAGE:-geospatial}
export RSTUDIO_SINGULARITY_EXTRA_PARAMS=${RSTUDIO_SINGULARITY_EXTRA_PARAMS:-}
export RSTUDIO_EXTRA_PARAMS=${RSTUDIO_EXTRA_PARAMS:-}

# Reduce risk of leaking them
unset keyfile certfile cafile

# Prepare environment
export workdir=$HOME/.rstudio
mkdir -p -m 700 ${workdir}/run ${workdir}/tmp ${workdir}/var/lib/rstudio-server $HOME/.cache/rstudio
cat > ${workdir}/database.conf <<END
provider=sqlite
directory=/var/lib/rstudio-server
END

cat > ${workdir}/logging.conf <<EOF
[*]
log-level=debug 
logger-type=stderr
EOF

# Set OMP_NUM_THREADS to prevent OpenBLAS (and any other OpenMP-enhanced
# libraries used by R) from spawning more threads than the number of processors
# allocated to the job.
#
# Set R_LIBS_USER to a path specific to rocker/rstudio to avoid conflicts with
# personal libraries from any R installation in the host environment
cat > ${workdir}/rsession.sh <<END
#!/bin/sh
export OMP_NUM_THREADS=${CPUS}
exec /usr/lib/rstudio-server/bin/rsession "\${@}"
END

chmod +x ${workdir}/rsession.sh

export APPTAINER_BIND="${workdir}/run:/run,${workdir}/tmp:/tmp,${workdir}/database.conf:/etc/rstudio/database.conf,${workdir}/rsession.sh:/etc/rstudio/rsession.sh,${workdir}/logging.conf:/etc/rstudio/logging.conf,${workdir}/var/lib/rstudio-server:/var/lib/rstudio-server,$HOME/.cache/rstudio:/$HOME/.cache/rstudio,/nfs/nas12.ethz.ch/fs1201/green_groups_nme_public:/cluster/public,/cluster/work/nme/software/libraries/R/rocker/${RSTUDIO_MODULE_VERSION}:/library/R/rocker/${RSTUDIO_MODULE_VERSION},/cluster/work/nme:/cluster/work/nme,/cluster/apps/:/cluster/apps/,/cluster/scratch/${USER}/:/cluster/scratch/${USER}"


# Do not suspend idle sessions.
# Alternative to setting session-timeout-minutes=0 in /etc/rstudio/rsession.conf
# https://github.com/rstudio/rstudio/blob/v1.4.1106/src/cpp/server/ServerSessionManager.cpp#L126
export APPTAINERENV_RSTUDIO_SESSION_TIMEOUT=0

export APPTAINERENV_USER=$(id -un)

# Define image name and directory
export IMAGE_NAME=${RSTUDIO_IMAGE}:${RSTUDIO_TAG}.sif
export IMAGE_DIR=/cluster/work/nme/software/apps/rstudio/${RSTUDIO_MODULE_VERSION}

# Run rstudio
singularity exec --disable-cache --nv --cleanenv ${RSTUDIO_SINGULARITY_EXTRA_PARAMS} $IMAGE_DIR/$IMAGE_NAME \
    /usr/lib/rstudio-server/bin/rserver ${RSTUDIO_EXTRA_PARAMS} --www-port ${SERVICE_PORT} \
            --auth-none=1 \
            --auth-pam-helper-path=pam-helper \
            --auth-stay-signed-in-days=30 \
            --auth-timeout-minutes=0 \
            --rsession-path=/etc/rstudio/rsession.sh \
            --www-root-path=$JUPYTERHUB_SERVICE_PREFIX \
            --www-address 127.0.0.1 \
            --server-user=$(id -un) &

sleep 5

$WARN_JUPYTERHUB
start_proxy

wait

